//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitalSignage.Data.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SignageDBContext : DbContext
    {
        public SignageDBContext()
            : base("name=SignageDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AssignPlayerDisplay> AssignPlayerDisplays { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<PlayerGroupMapping> PlayerGroupMappings { get; set; }
        public DbSet<CampaignSceneMapping> CampaignSceneMappings { get; set; }
        public DbSet<FaceRecogSignage> FaceRecogSignages { get; set; }
        public DbSet<DeviceContentHistory> DeviceContentHistories { get; set; }
        public DbSet<VWCampaignHistory> VWCampaignHistories { get; set; }
        public DbSet<Scene> Scenes { get; set; }
        public DbSet<Player> Players { get; set; }
        public DbSet<DeviceContentTracker> DeviceContentTrackers { get; set; }
        public DbSet<Display> Displays { get; set; }
        public DbSet<PlayerGroup> PlayerGroups { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<Campaign> Campaigns { get; set; }
        public DbSet<VWDevicewithGroup> VWDevicewithGroups { get; set; }
        public DbSet<TestTableOne> TestTableOnes { get; set; }
        public DbSet<DigitalSignageBIView> DigitalSignageBIViews { get; set; }
        public DbSet<SignageBIView> SignageBIViews { get; set; }
        public DbSet<database_firewall_rules> database_firewall_rules { get; set; }
        public DbSet<BackgroundImageStorage> BackgroundImageStorages { get; set; }
    
        public virtual int SP_UpdateDeviceTracker(Nullable<int> campaignId, string status)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateDeviceTracker", campaignIdParameter, statusParameter);
        }
    
        public virtual int SP_UpdateCampaignTime(Nullable<int> campaignId, string startTime, string endTime)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(int));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateCampaignTime", campaignIdParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<SP_CampaignReport_Result> SP_CampaignReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CampaignReport_Result>("SP_CampaignReport");
        }
    
        public virtual int SP_AddCampHistory(Nullable<int> campaignId, string status, Nullable<int> userId)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddCampHistory", campaignIdParameter, statusParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_GetCampaignList_Result> SP_GetCampaignList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCampaignList_Result>("SP_GetCampaignList");
        }
    
        public virtual ObjectResult<SP_GetDeviceAndGroup_Result> SP_GetDeviceAndGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDeviceAndGroup_Result>("SP_GetDeviceAndGroup");
        }
    
        public virtual ObjectResult<SP_CampaignReport1_Result> SP_CampaignReport1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CampaignReport1_Result>("SP_CampaignReport1");
        }
    
        public virtual int SP_UpdateCampaignTime1(Nullable<int> campaignId, string startTime, string endTime)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(int));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateCampaignTime1", campaignIdParameter, startTimeParameter, endTimeParameter);
        }
    }
}
